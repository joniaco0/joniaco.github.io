[
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Big Ten CFB Averages",
    "section": "",
    "text": "In 2024, there has been several clock rule changes, including the two minute warning, changes to first down timing and untimed down scenarios. To see if there is any difference in plays among Big Ten teams, we need to collect the data.\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\ngames2023 &lt;- read.csv(\"https://dwillis.github.io/sports-data-files/footballlogs23.csv\")\ngames2024 &lt;- read.csv(\"https://dwillis.github.io/sports-data-files/footballlogs24.csv\")\nIn both samples, I want to filter for the Big Ten, to do this, you can add the filter function for both years with a list of the Big Ten Schools. At the same time, I want to add a season to show which season each is in. You can do that by mutating a season column and putting in the years the data is from. Finally, because it is October 8th in 2024, this data isn’t complete for 2023, so I want to filter games only up to October 8th for 2023.\nCode\nbig10 &lt;- c(\"Nebraska Cornhuskers\", \"Iowa Hawkeyes\", \"Minnesota Golden Gophers\", \"Illinois Fighting Illini\", \"Northwestern Wildcats\", \"Wisconsin Badgers\", \"Indiana Hoosiers\", \"Purdue Boilermakers\", \"Ohio State Buckeyes\", \"Michigan Wolverines\", \"Michigan State Spartans\", \"Penn State Nittany Lions\", \"Rutgers Scarlet Knights\", \"Maryland Terrapins\")\nBigTengames2023 &lt;- games2023 |&gt; filter(TeamFull %in% big10) |&gt; mutate(Season = 2023) |&gt; filter(Date &gt; \"2023-10-8\")\nBigTengames2024 &lt;- games2024|&gt; filter(TeamFull %in% big10) |&gt; mutate(Season = 2024)\nNow I want a dataset with all plays from these games listed above. You can bind both 2023 and 2024 together to get one full dataset, and then use Group_By to seperate the teams and the seasons.\nCode\nmerged_data &lt;- rbind(BigTengames2023,BigTengames2024)\nBigTen &lt;- merged_data |&gt; \n  group_by(Season,TeamFull) |&gt; \n  summarise(\n    plays = sum(OffensivePlays)\n  )\n\n\n`summarise()` has grouped output by 'Season'. You can override using the\n`.groups` argument.\n\n\nCode\nBigTen |&gt; arrange(desc(plays))\n\n\n# A tibble: 28 × 3\n# Groups:   Season [2]\n   Season TeamFull                 plays\n    &lt;dbl&gt; &lt;chr&gt;                    &lt;int&gt;\n 1   2023 Michigan Wolverines        433\n 2   2024 Indiana Hoosiers           406\n 3   2024 Nebraska Cornhuskers       393\n 4   2023 Iowa Hawkeyes              383\n 5   2024 Minnesota Golden Gophers   368\n 6   2024 Maryland Terrapins         363\n 7   2024 Michigan State Spartans    363\n 8   2024 Michigan Wolverines        360\n 9   2023 Wisconsin Badgers          348\n10   2024 Wisconsin Badgers          346\n# ℹ 18 more rows\nYou can see at the top of the chart is 2023 Michigan at this point of the year in 2023, but most of the teams are from 2024. We can visualize this by making a stacked bar chart for each team and seeing how the plays differ for each year.\nCode\nBigTen$Season &lt;- factor(BigTen$Season, levels = c(\"2024\", \"2023\"))\nggplot() + \n  geom_bar(data=BigTen, aes(x=TeamFull, weight=plays, fill=Season)) +\n  coord_flip()\nAs you can see, a lot of teams saw a Big jump in plays due to the rule changes. Illinois barely cracked 250 plays in 2023, but is well over 300 in 2024. Same can be said for Michigan State, Nebraska and Purdue, who are all closer to 400 plays than 200, something that differs a lot from 2023. Indiana, a team that wasn’t leading the race in 2023, is suddenly close to the top in 2024. For some teams it looks about equal, which is shown if you get rid of the teams and look at the overall play count. If you want to see the total number of plays by season without the team differentials.\nCode\nggplot() + \n  geom_bar(data=BigTen, aes(x=Season, weight=plays))"
  },
  {
    "objectID": "index.html#the-difference-is-100-there-but-its-around-500-or-so-plays-split-between-14-teams.-so-on-average-theres-about-35-extra-plays-on-offense-through-six-games-or-so.",
    "href": "index.html#the-difference-is-100-there-but-its-around-500-or-so-plays-split-between-14-teams.-so-on-average-theres-about-35-extra-plays-on-offense-through-six-games-or-so.",
    "title": "Big Ten CFB Averages",
    "section": "The difference is 100% there, but it’s around 500 or so plays split between 14 teams. So on average there’s about 35 extra plays on offense through six games or so.",
    "text": "The difference is 100% there, but it’s around 500 or so plays split between 14 teams. So on average there’s about 35 extra plays on offense through six games or so."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/3rdand6/index.html",
    "href": "posts/3rdand6/index.html",
    "title": "Did Maryland make a crucial mistake against Illinois?",
    "section": "",
    "text": "During last year’s homecoming game, Maryland ran the ball on 3rd and 6 on the Illinois 29 yard line, losing yardage, and setting up a field goal to tie the game. Maryland would go on to lose 27-24 on a walkoff field goal. Many blamed the play call for the loss, what was this really that bad of a decision? Let’s walk through the history of rushing on third and six in the past five years. First we need to load in the libraries.\n\n\nCode\nlibrary(cfbfastR)\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nNext, we can load in data from the past 5 seasons (note I am also using the third and six data since CFBfastR does not work with my computer well.)\n\n\nCode\n#pbp &lt;- load_cfb_pbp(seasons = c(2019,2020,2021,2022,2023,2024))\n#pbp\nlibrary(readr)\nthird_and_six &lt;- read_csv(\"third_and_six.csv\")\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 15661 Columns: 331\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (65): pos_team, def_pos_team, play_type, play_text, penalty_detail, hom...\ndbl (229): year, week, id_play, game_id, game_play_number, half_play_number,...\nlgl  (37): penalty_1st_conv, middle_8, Goal_To_Go, Under_two, Under_three, G...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nthird_and_six\n\n\n# A tibble: 15,661 × 331\n    year  week id_play   game_id game_play_number half_play_number\n   &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;            &lt;dbl&gt;            &lt;dbl&gt;\n 1  2019     1 4.01e17 401110721               16               16\n 2  2019     1 4.01e17 401110721               62               62\n 3  2019     1 4.01e17 401110721               73               73\n 4  2019     1 4.01e17 401110721               88                6\n 5  2019     1 4.01e17 401110721              136               54\n 6  2019     1 4.01e17 401110722               75               75\n 7  2019     1 4.01e17 401110723               28               28\n 8  2019     1 4.01e17 401110724               16               16\n 9  2019     1 4.01e17 401110724               63               63\n10  2019     1 4.01e17 401110725              101               20\n# ℹ 15,651 more rows\n# ℹ 325 more variables: drive_play_number &lt;dbl&gt;, pos_team &lt;chr&gt;,\n#   def_pos_team &lt;chr&gt;, pos_team_score &lt;dbl&gt;, def_pos_team_score &lt;dbl&gt;,\n#   half &lt;dbl&gt;, period &lt;dbl&gt;, clock.minutes &lt;dbl&gt;, clock.seconds &lt;dbl&gt;,\n#   play_type &lt;chr&gt;, play_text &lt;chr&gt;, down &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   yards_to_goal &lt;dbl&gt;, yards_gained &lt;dbl&gt;, EPA &lt;dbl&gt;, ep_before &lt;dbl&gt;,\n#   ep_after &lt;dbl&gt;, wpa &lt;dbl&gt;, wp_before &lt;dbl&gt;, wp_after &lt;dbl&gt;, …\n\n\nThen we create a dataframe of all plays that are on third down with six yards left to the first down marker.\n\n\nCode\n#third_and_six &lt;- pbp |&gt; filter(down == 3) |&gt; filter(distance == 6)\n\n\nSo in the past five years, what have teams done on Third and Six? To do this we can use summarize and group by each play type to see what teams call.\n\n\nCode\nthird_and_six|&gt; group_by(play_type) |&gt; summarize(Count = n()) |&gt; mutate(Percentage = (Count / sum(Count)) * 100)|&gt; arrange(desc(Count)) \n\n\n# A tibble: 22 × 3\n   play_type                  Count Percentage\n   &lt;chr&gt;                      &lt;int&gt;      &lt;dbl&gt;\n 1 Pass Reception              4676     29.9  \n 2 Pass Incompletion           3866     24.7  \n 3 Rush                        3173     20.3  \n 4 Penalty                     1068      6.82 \n 5 Timeout                      929      5.93 \n 6 Sack                         800      5.11 \n 7 Passing Touchdown            496      3.17 \n 8 Interception Return          257      1.64 \n 9 Rushing Touchdown            135      0.862\n10 Fumble Recovery (Opponent)   101      0.645\n# ℹ 12 more rows\n\n\nRush plays are around 20% according to this, but there are a couple other play types such as fumble recovery that may have been rushes before hand. Filtering by intial rush from CFBfastr’s dataset, we can find a more accurate number for rushes.\n\n\nCode\nrushes &lt;- third_and_six|&gt; filter(rush == 1)\nrushcount &lt;-  rushes|&gt; summarise(Count = n()) |&gt; pluck(1)\npasses &lt;- third_and_six|&gt; filter(pass == 1) |&gt; summarise(Count = n()) |&gt; pluck(1)\ntotal &lt;- rushcount+passes\nperct &lt;- (rushcount/total) * 100\nperct\n\n\n[1] 24.88618\n\n\nOk so only 24% of the time teams run on Third and Six, it doesn’t seem too optimal, but not super rare. How many yards on average do these teams gain when they run on third and six?\n\n\nCode\navgrush &lt;- rushes|&gt; summarize(mean(yards_gained))\navgrush\n\n\n# A tibble: 1 × 1\n  `mean(yards_gained)`\n                 &lt;dbl&gt;\n1                 6.08\n\n\nOn average, they rush for the first down, which is pretty suprising considering the spread of the play usage. From here, lets see what teams run the most on third and six, and spolier alert, it’s teams that rely on the run the most.\n\n\nCode\nteamrushes &lt;- rushes |&gt; group_by(pos_team) |&gt; summarize(Count = n(),Avg_Yards_Gained = mean(yards_gained)) |&gt; arrange(desc(Count))\nteamrushes\n\n\n# A tibble: 280 × 3\n   pos_team         Count Avg_Yards_Gained\n   &lt;chr&gt;            &lt;int&gt;            &lt;dbl&gt;\n 1 Navy                60             4.22\n 2 Army                51             4.14\n 3 Air Force           42             5.69\n 4 Georgia Southern    35             5.89\n 5 New Mexico          32             6.47\n 6 Ole Miss            31             4.77\n 7 Kent State          30             6.6 \n 8 Baylor              29             9.03\n 9 Georgia Tech        29             7.55\n10 Louisiana           29             6.45\n# ℹ 270 more rows\n\n\nThe service academies do it the most, they also rely on the run game more than most in the nation. That could explain how their averages are lower than some of the other teams on this list. How does Maryland compare?\n\n\nCode\nteamrushes |&gt; filter(pos_team == \"Maryland\")\n\n\n# A tibble: 1 × 3\n  pos_team Count Avg_Yards_Gained\n  &lt;chr&gt;    &lt;int&gt;            &lt;dbl&gt;\n1 Maryland    17             6.41\n\n\nSo on average, Maryland gets the first down on Third and Six when they run the ball. They also don’t run it too often. How does this look visually when comparing all schools?\n\n\nCode\numd &lt;- teamrushes|&gt; filter(pos_team == \"Maryland\")\n\n\n\n\nCode\nggplot() +\ngeom_point(data = teamrushes, aes(x=Count, y=Avg_Yards_Gained), color = \"gray\", size = 1)+ \ngeom_point(data = umd, aes(x=Count, y=Avg_Yards_Gained), color = \"red\", size = 2)+\ngeom_hline(yintercept = 6, linetype = \"dashed\", color = \"blue\")+\n  labs(title = \"Maryland on average gets the first down with rushes on third and six \", x = \"Count\", y = \"Avg Yards Gained\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nWith this, it’s easy to draw the conclusion that this was the right decison. Maryland has had a good amount of success running it on third and six, and this was an educated decison. Well lets look at the history of Maryland running it on Third and Six. How many were successful?\n\n\nCode\nfirstdown &lt;- rushes |&gt; filter(pos_team == \"Maryland\") |&gt; select(season,pos_team,yards_gained,wpa)|&gt;  mutate(First_Down = ifelse(yards_gained &gt;= 6, TRUE, FALSE))|&gt; arrange((wpa))\nfirstdown\n\n\n# A tibble: 17 × 5\n   season pos_team yards_gained        wpa First_Down\n    &lt;dbl&gt; &lt;chr&gt;           &lt;dbl&gt;      &lt;dbl&gt; &lt;lgl&gt;     \n 1   2023 Maryland           -1 -0.099     FALSE     \n 2   2022 Maryland           -2 -0.0701    FALSE     \n 3   2022 Maryland            1 -0.0649    FALSE     \n 4   2021 Maryland            5 -0.0143    FALSE     \n 5   2023 Maryland            5 -0.0140    FALSE     \n 6   2022 Maryland            3 -0.00593   FALSE     \n 7   2024 Maryland            5 -0.00304   FALSE     \n 8   2022 Maryland            6 -0.000840  TRUE      \n 9   2019 Maryland            3 -0.0000001 FALSE     \n10   2021 Maryland            8  0.0000127 TRUE      \n11   2021 Maryland            8  0.0000732 TRUE      \n12   2021 Maryland            5  0.00107   FALSE     \n13   2022 Maryland           21  0.00163   TRUE      \n14   2023 Maryland           15  0.00239   TRUE      \n15   2023 Maryland           12  0.0645    TRUE      \n16   2022 Maryland            7  0.0648    TRUE      \n17   2023 Maryland            8  0.0699    TRUE      \n\n\nOf those 17 times, 8 of them reached first down, and three were over 12 yards. On the other hand, of every time Maryland ran on Third and Six, their 1 yard loss was the most consquential of any of the plays listed about according to WPA.\nSo what’s the answer? The answer is it’s not as simple as what the normal fan would call a bad call. Running it on third and six seems like giving up, but in reality Maryland has found some success in the past and don’t do it as much. That being said, the success of this play historically is close to a coin flip and really depends on the team they play."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  }
]