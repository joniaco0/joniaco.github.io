[
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Big Ten CFB Averages",
    "section": "",
    "text": "In 2024, there has been several clock rule changes, including the two minute warning, changes to first down timing and untimed down scenarios. To see if there is any difference in plays among Big Ten teams, we need to collect the data.\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\ngames2023 &lt;- read.csv(\"https://dwillis.github.io/sports-data-files/footballlogs23.csv\")\ngames2024 &lt;- read.csv(\"https://dwillis.github.io/sports-data-files/footballlogs24.csv\")\nIn both samples, I want to filter for the Big Ten, to do this, you can add the filter function for both years with a list of the Big Ten Schools. At the same time, I want to add a season to show which season each is in. You can do that by mutating a season column and putting in the years the data is from. Finally, because it is October 8th in 2024, this data isn’t complete for 2023, so I want to filter games only up to October 8th for 2023.\nCode\nbig10 &lt;- c(\"Nebraska Cornhuskers\", \"Iowa Hawkeyes\", \"Minnesota Golden Gophers\", \"Illinois Fighting Illini\", \"Northwestern Wildcats\", \"Wisconsin Badgers\", \"Indiana Hoosiers\", \"Purdue Boilermakers\", \"Ohio State Buckeyes\", \"Michigan Wolverines\", \"Michigan State Spartans\", \"Penn State Nittany Lions\", \"Rutgers Scarlet Knights\", \"Maryland Terrapins\")\nBigTengames2023 &lt;- games2023 |&gt; filter(TeamFull %in% big10) |&gt; mutate(Season = 2023) |&gt; filter(Date &gt; \"2023-10-8\")\nBigTengames2024 &lt;- games2024|&gt; filter(TeamFull %in% big10) |&gt; mutate(Season = 2024)\nNow I want a dataset with all plays from these games listed above. You can bind both 2023 and 2024 together to get one full dataset, and then use Group_By to seperate the teams and the seasons.\nCode\nmerged_data &lt;- rbind(BigTengames2023,BigTengames2024)\nBigTen &lt;- merged_data |&gt; \n  group_by(Season,TeamFull) |&gt; \n  summarise(\n    plays = sum(OffensivePlays)\n  )\n\n\n`summarise()` has grouped output by 'Season'. You can override using the\n`.groups` argument.\n\n\nCode\nBigTen |&gt; arrange(desc(plays))\n\n\n# A tibble: 28 × 3\n# Groups:   Season [2]\n   Season TeamFull                 plays\n    &lt;dbl&gt; &lt;chr&gt;                    &lt;int&gt;\n 1   2023 Michigan Wolverines        433\n 2   2024 Indiana Hoosiers           406\n 3   2024 Nebraska Cornhuskers       393\n 4   2023 Iowa Hawkeyes              383\n 5   2024 Minnesota Golden Gophers   368\n 6   2024 Maryland Terrapins         363\n 7   2024 Michigan State Spartans    363\n 8   2024 Michigan Wolverines        360\n 9   2023 Wisconsin Badgers          348\n10   2024 Wisconsin Badgers          346\n# ℹ 18 more rows\nYou can see at the top of the chart is 2023 Michigan at this point of the year in 2023, but most of the teams are from 2024. We can visualize this by making a stacked bar chart for each team and seeing how the plays differ for each year.\nCode\nBigTen$Season &lt;- factor(BigTen$Season, levels = c(\"2024\", \"2023\"))\nggplot() + \n  geom_bar(data=BigTen, aes(x=TeamFull, weight=plays, fill=Season)) +\n  coord_flip()\nAs you can see, a lot of teams saw a Big jump in plays due to the rule changes. Illinois barely cracked 250 plays in 2023, but is well over 300 in 2024. Same can be said for Michigan State, Nebraska and Purdue, who are all closer to 400 plays than 200, something that differs a lot from 2023. For some teams it looks about equal, which is shown if you get rid of the teams and look at the overall play count. If you want to see the total number of plays by season without the team differentials.\nCode\nggplot() + \n  geom_bar(data=BigTen, aes(x=Season, weight=plays))"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#the-difference-is-100-there-but-its-around-500-or-so-plays-split-between-14-teams.-so-on-average-theres-about-35-extra-plays-on-offense-through-six-games-or-so.",
    "href": "index.html#the-difference-is-100-there-but-its-around-500-or-so-plays-split-between-14-teams.-so-on-average-theres-about-35-extra-plays-on-offense-through-six-games-or-so.",
    "title": "Big Ten CFB Averages",
    "section": "The difference is 100% there, but it’s around 500 or so plays split between 14 teams. So on average there’s about 35 extra plays on offense through six games or so.",
    "text": "The difference is 100% there, but it’s around 500 or so plays split between 14 teams. So on average there’s about 35 extra plays on offense through six games or so."
  }
]